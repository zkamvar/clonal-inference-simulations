% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_diversity.R
\name{tidy_diversity}
\alias{tidy_diversity}
\title{Generate a tidy table of diversity statistics}
\usage{
tidy_diversity(gid, n = 1000, ..., verbose = TRUE)
}
\arguments{
\item{gid}{a genind or genclone object}

\item{n}{number of bootstrap replicates (default: 1000)}

\item{...}{arguments to be passed on to \code{\link[poppr]{diversity_stats}}}

\item{verbose}{when \code{TRUE}, a status message will be printed at the
beginning of the analysis. \code{FALSE} suppresses this message.}
}
\value{
a tidy data frame with estimates and variances
}
\description{
Generate a tidy table of diversity statistics
}
\examples{
uSimp <- function(x){
  lambda <- vegan::diversity(x, "simpson")
  x <- drop(as.matrix(x))
  if (length(dim(x)) > 1){
    N <- rowSums(x)
  } else {
    N <- sum(x)
  }
  return((N/(N-1))*lambda)
}
library("poweRlaw")
power_law_beta <- function(x){
  if (length(x) == 1) return(NA_real_)
  xpow <- displ(x[x > 0])                 # Generate the distribution
  xpow$setPars(estimate_pars(xpow))       # Estimate the parameters
  xdat <- plot(xpow, draw = FALSE)        # Extract the data
  xlm  <- lm(log(y) ~ log(x), data = xdat) # Run log-log linear model for slope
  return(-coef(xlm)[2])
}

Beta <- function(x){
  x <- drop(as.matrix(x))
  if (length(dim(x)) > 1){
    res <- apply(x, 1, power_law_beta)
  } else {
    res <- power_law_beta(x)
  }
  return(res)
}
library("poppr")
data(Pinf)
seppop(Pinf) \%>\%
  lapply(tidy_diversity, n = 100, B = Beta, uSimp = uSimp) \%>\%
  bind_rows()
}

